/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
import java.util.*;

class Solution {
    public boolean isPalindrome(ListNode head) {
        Stack<ListNode> ss=new Stack();
        ListNode first=head, sec=head;
        while(sec!=null && sec.next!=null)
        {
            ss.push(first);
            first=first.next;
            sec=sec.next.next;
            
            
        }
        if(sec!=null)
        {
            first=first.next;
        }
        while(first!=null)
        {
            if(first.val!=(ss.pop()).val)return false;
            first=first.next;
        }
        return ss.isEmpty();
    }
}
